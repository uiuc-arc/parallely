precise int32 [] Edges;
precise int32 [] Inlinks;
precise int32 [] Outlinks;
precise int32 [] Distances;


0:[
  repeat 10 {
    node = 0;
    repeat 1000 {
      neighbors = Inlinks[node];
      dist = Distances[node];
      i = 0;
      repeat 8 {
        neighbor = Edges[node*8+i];
        ndist = Distances[neighbor];
        try{
          ndist = ndist [0.999] 0;
        } check{f}
        recover {
          ndist = ndist [0.9999] 0;
        };
        condition = dist > ndist;
        if condition then {
          dist = ndist+1;
        } else { dist = dist; };
        i = i + 1;
      };
      Distances[node] = dist;
      node = node + 1;
    };
  };
]

