package main

import "fmt"
import "math/rand"
import "math"
import "dieseldistacc"

const ArrayDim = __ARRAYDIM__
const ArraySize = __ARRAYSZ__
const SliceSize = __SLICESZ__
const Iterations = 10
const RowsPerThread = ArrayDim/10
var Num_threads int

var A,B []float64

__GLOBAL_DECS__

__FUNC_DECS__

func main() {
	fmt.Println("Starting main thread");

  Num_threads = __NUM_THREADS__;
	
  // rand.Seed(time.Now().UTC().UnixNano())
  seed := int64(12345)
  rand.Seed(seed) // deterministic seed for reproducibility

  A = make([]float64, ArraySize)
  B = make([]float64, ArraySize)

  fmt.Println("Generating matrices of size",ArraySize,"using random seed",seed)

  for i := 0; i < ArraySize; i++ {
    A[i] = rand.NormFloat64()*math.Abs(1.0)
    B[i] = rand.NormFloat64()*math.Abs(1.0)
  }

  __START__THREADS__

}
