Q = {1,2,3,4,5,6,7,8};

0:[
  dynamic int bestBlock;
  dynamic int bestSSD;
  dynamic int bestBlockIdx;
  dynamic int workerSSD;
  dynamic int workerBlock;

  dynamic int[8] ssdList;
  dynamic int[8] blockList;

  precise int idx;

  idx = 0;
  for q in Q do {
    workerSSD = receive(q, dynamic int);
    workerBlock = receive(q, dynamic int);
    ssdList[idx] = workerSSD;
    blockList[idx] = workerBlock;
    idx = idx + 1;
  };

  bestBlockIdx = argMin(ssdList);
  bestBlock = blockList[bestBlockIdx];
  bestSSD = ssdList[bestBlock];

  ## fmt.Println(DynMap[0], DynMap[1]) ##;
  BestBlock = bestBlock;
  BestSSD = bestSSD;
]

||

q in Q:[
  dynamic int[__BLOCKSPERWORKER__] ssdList;

  dynamic int ssd;
  dynamic int bestSSD;
  dynamic int bestBlock;

  precise int preciseSSD;
  precise int blockIdx;
  precise int listIdx;

  blockIdx = (q - 1)*BlocksPerWorker;
  listIdx = 0;
  repeat BlocksPerWorker {
    preciseSSD = calcSSD(blockIdx);
    ssd = track(preciseSSD, 0.0, 0.9999);
    ssdList[listIdx] = ssd;
    blockIdx = blockIdx + 1;
    listIdx = listIdx + 1;
  };

  bestBlock = argMin(ssdList);
  bestSSD = ssdList[bestBlock];

  send(0, dynamic int, bestSSD);
  send(0, dynamic int, bestBlock);
]