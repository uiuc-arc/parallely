Q = {1};

0:[
dynamic float64 accl;
dynamic float64 vel;
dynamic float64 pos;
dynamic float64 delta;
dynamic float64 tempDF0;
dynamic float64 tempDF1;
dynamic float64 tempDF2;

precise float64 gpsVelErr;
precise float64 gpsPosErr;
precise float64 tempF;

precise int velErrGood;
precise int posErrGood;
precise int overallGood;

delta = track(Delta, 1.0, 0.0);

repeat 1000 {
  gpsVelErr = getGPSVelErr();
  gpsPosErr = getGPSPosErr();
  velErrGood = gpsVelErr < 0.1;
  posErrGood = gpsPosErr < 1.0;
  overallGood = velErrGood * posErrGood;
  ## UsedGPS += overallGood ##;
  if overallGood then {
    tempF = getGPSVel();
    vel = track(tempF, 1.0, gpsVelErr);
    tempF = getGPSPos();
    pos = track(tempF, 1.0, gpsPosErr);
  } else {
    tempF = accelerometer();
    accl = track(tempF, 1.0, 0.01);
    tempDF0 = accl * delta;
    tempDF1 = 0.5 * tempDF0;
    tempDF2 = tempDF1 + vel;
    pos = tempDF2 * delta;
    tempDF1 = tempDF0 + vel;
    vel = tempDF1;
  };
};
Pos = pos;
]

||

q in Q:[
  dynamic float64 dummyVariable;
  dummyVariable = 0.0;
  DummyVariable = dummyVariable;
]