package main

import "fmt"
import "math/rand"
import "math"
import "time"
import "LIBRARYNAME"

const Delta = 0.1
const AccelerometerError = 0.01
const Num_threads = 2

var Out, DummyVariable float64

var pos, vel float64

func getGPSVelErr() float64 {
  return math.Abs(rand.NormFloat64()/20.0)
}

func getGPSPosErr() float64 {
  return math.Abs(rand.NormFloat64()/2.0)
}

func getGPSVel() float64 {
  vel += rand.NormFloat64()/10.0
  return vel
}

func getGPSPos() float64 {
  pos += vel*Delta
  return pos
}

func accelerometer() float64 {
  return rand.Float64()/10.0
}

__GLOBAL_DECS__

__FUNC_DECS__

func main() {
  fmt.Println("Starting main thread at",time.Now().UTC().UnixNano());

  startTime := time.Now()

  rand.Seed(time.Now().UTC().UnixNano())

  pos = rand.Float64()*10.0-5.0
  vel = rand.Float64()-0.5

  __START__THREADS__

  elapsed := time.Since(startTime)
  fmt.Println("Elapsed time : ", elapsed.Nanoseconds());
}
