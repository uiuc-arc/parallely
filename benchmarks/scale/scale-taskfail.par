Q = {1,2,3,4,5,6,7,8,9,10};

0:[
  precise int8 [10000] src;
  approx  int8 [40000] dst;
  approx  int8 [4000] slice;
  precise int32 i;
  precise int32 idx;
  approx  int8 pix;
  approx  int32 fail;

  for q in Q do {
    send(q, precise int8[], src);
  }
  for q in Q do {
    fail, slice = condreceive(q, approx int8[]);
    i = 0;
    repeat 4000 {
      idx = (q-1)*4000+i;
      pix = (slice[idx]) [fail] 0;
      dst[idx] = pix;
    }
  }
]

||

q in Q:[
  precise int8 [10000] src;
  approx  int8 [4000] slice;
  precise float64 si;
  precise int32 i;
  precise float64 sj;
  precise int32 j;
  precise int8 pix;
  approx  int32 fail;

  si = (q-1)*10;
  i = 0;
  repeat 20 {
    sj = 0;
    j = 0;
    repeat 200 {
      pix = scaleKernel(si,sj,src,10,10);
      slice[i*200+j] = pix;
      sj = sj+0.5;
      j = j+1;
    }
    si = si+0.5;
    i = i+1;
  }

  fail = 1 [0.9] 0;
  condsend(fail, 0, approx int8[], slice);
]

