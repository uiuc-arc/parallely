Q = {1,2,3,4,5,6,7,8,9,10};

0:[
  approx  float64[10000] array;
  approx  float32[1000] slice;
  precise int32 i;
  precise int32 idx;
  approx  float32 elem;
  approx  float64 elemConv;

  repeat 10 {
    for q in Q {
      send(q, approx float64[], array);
    }
    for q in Q {
      slice = receive(q, approx float32[]);
      i = 0;
      repeat 1000 {
        idx = (q-1)*1000+i;
        elem = slice[i];
        elemConv = float64(elem);
        array[idx] = elemConv;
        i = i+1;
      }
    } 
  }
]

||

q in Q:[
  approx  float64[10000] array;
  approx  float32[1000] slice;
  precise int32 i;
  precise int32 j;
  precise int32 k;
  approx  float64 point;
  approx  float32 pointConv;

  repeat 10 {
    array = receive(0, approx float64[]);
    i = (q-1)*10;
    k = 0;
    repeat 10 {
      if (i>0 && i<99) {
        j = 1;
        repeat 98 {
          point = 0.2*(array[(i-1)*10+j]+array[(i+1)*10+j]+array[i*10+j-1]+array[i*10+j+1]);
          pointConv = float32(point);
          slice[k] = pointConv;
          j = j+1;
          k = k+1;
        }
      }
      i = i+1;
    }
    send(0, approx float32[], slice);
  }
]

