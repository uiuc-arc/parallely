Q = {1,2,3,4,5,6,7,8,9,10};

0:[
  precise float64[10000] array;
  precise float64[1000] slice;
  precise int32 i;
  precise int32 idx;
  precise float64 elem;


  for q in Q do {
    send(q, precise float64[], array);
    send(q, precise int32, q);  
  };
  for q in Q do {
    slice = receive(q, precise float64[]);
    i = 0;
    repeat 1000 {
      idx = (q-1)*1000+i;
      elem = slice[i];
      array[idx] = elem;
      i = i+1;
    };
  };
]

||

q in Q:[
  precise float64[10000] array;
  precise float64[1000] slice;
  precise int32 i;
  precise int32 j;
  precise int32 k;
  precise int32 q;
  precise int32 conditional;
  precise float64 a;
  precise float64 b;
  precise float64 c;
  precise float64 d;
  precise float64 e;
  precise float64 f;

  precise float64 point;

  array = receive(0, precise float64[]);
  q = receive(0, precise int32);
  i = q-1*10;
  k = 0;
  repeat 10 {
    conditional = i<99;
    if conditional then {
      j = 1;
      repeat 98 {
        a = array[((i-1)*10)+(j-1)];
        b = array[(i-1)*10+j];
        c = array[(i-1)*10+j+1];
        d = array[(i+1)*10+j-1];
        e = array[(i+1)*10+j-1];
        f = array[(i+1)*10+j+1];
        point = a + b + c + d + e + f;
        slice[k] = point;
        j = j+1;
        k = k+1;
      };
    }
    else{
      skip;
    };
    i = i+1;
  };
  send(0, precise float64[], slice);

]

